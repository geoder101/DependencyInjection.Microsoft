<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <IsPackable>true</IsPackable>
    <PackageId>geoder101.Microsoft.Extensions.DependencyInjection</PackageId>
    <Description>Extension methods for Microsoft.Extensions.DependencyInjection that enable the Decorator pattern. Easily wrap registered services with decorators while preserving service lifetimes (Transient, Scoped, Singleton).</Description>
    <Authors>George Dernikos</Authors>
    <PackageTags>dependency-injection;di;decorator;decorator-pattern;microsoft-extensions;service-collection;asp.net-core</PackageTags>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <RepositoryUrl>https://github.com/geoder101/DependencyInjection.Microsoft</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <IncludeSource>true</IncludeSource>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <DebugType>portable</DebugType>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <None Include="../../README.md" Pack="true" PackagePath="/"/>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" />
  </ItemGroup>

</Project>
